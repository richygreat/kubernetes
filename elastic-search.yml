apiVersion: v1               #API Version of the resource
kind: Service                #Type of resource
metadata:                    #Contains metadata of this resource.
  name: elasticsearch        #Name of this resource
  labels:                    #Additional identifier to put on pods
    component: elasticsearch #puts component = elasticsearch
spec:                        #Specifications of this resource
  type: NodePort             #type of service
  selector:                  #will distribute load on pods which
    component: elasticsearch #have label `component = elasticsearch`
  ports:                     #Port on which LoadBalancer will listen
  - name: http               #Name given to port
    port: 9200               #Port number
    protocol: TCP            #Protocol supported
  - name: transport          #Name given to port
    port: 9300               #Port number
    protocol: TCP            #Protocol supported
---
apiVersion: apps/v1beta1         # API version of kubernetes in which `StatefulSet` is available. For Kubernetes 1.8.7 its apps/v1beta1
kind: StatefulSet                # Type of resource that we are creating
metadata:                        # Holds metadata for this resource
  name: es                       # Name of this resource
  labels:                        # Extra metadata goes inside labels. It is for stateful resource
    component: elasticsearch     # Just a metadata we are adding
spec:                            # Holds specification of this resource
  replicas: 1                    # Responsible for maintaining the given number of replicas
  serviceName: elasticsearch     # Name of service, required by statefulset
  template:                      # Template holds the spec of the pod that will be created and maintained by statefulset
    metadata:                    # Holds metadata for the pod
      labels:                    # Extra metadata goes inside labels. It is for the pod
        component: elasticsearch # Just a metadata for the pod
    spec:                        # Holds the spec of the pod
      initContainers:            # will always initialize before other containers in the pod
      - name: init-sysctl        # Name of the init-container
        image: busybox           # Image that will be deployed in this container
        imagePullPolicy: IfNotPresent              # Sets the policy that only pull image from registry if it is not available locally
        command: ["sysctl", "-w", "vm.max_map_count=262144"]  # Sets the system varibale in the container, this value is required by ES
        securityContext:         # Security context holds any special permission given to this container
          privileged: true       # This container gets the right to run in privilaged mode
      containers:                # Holds the list and configs of normal containers in the pod
      - name: es                 # Name of the first container
        securityContext:         # Security context holds any special permission given to this container
          capabilities:          # Container will have the capability to IPC Lock , can lock on memory so that it is not swapped out.
            add:
              - IPC_LOCK
        image: quay.io/pires/docker-elasticsearch-kubernetes:5.6.4 # specifies the image of elasticsearch to be installed
        env:                     # array of environment variables with values are passed to this image
        - name: KUBERNETES_CA_CERTIFICATE_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: "CLUSTER_NAME"
          value: "myesdb"
        - name: "DISCOVERY_SERVICE"
          value: "elasticsearch"
        - name: NETWORK_HOST
          value: "_eth0_"
        - name: ES_JAVA_OPTS           #Specify the Heap Size
          value: -Xms256m -Xmx256m
        ports:                         # Ports that this pod will open
        - containerPort: 9200
          name: http
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:                 # The path where volume will be mounted.
        - mountPath: /data
          name: storage               # Name given to this mount
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:               # It  provides stable storage using PersistentVolumes provisioned by a PersistentVolume Provisioner
  - metadata:                         # Metadata given to this resource (Persistant Volume Claim)
      name: storage                   # Name of this resource
    spec:                             # Specification of this PVC (Persistant Volume Claim)
      storageClassName: gp2           # Storage class used to provision this PVC
      accessModes: [ ReadWriteOnce ]  # Access mode of the volume
      resources:                      # Holds the list of resources
        requests:                     # Requests sent to the storage class
          storage: 20Gi                # Request to provision a volume of 1 GB
---
apiVersion: v1               #API Version of the resource
kind: Service                #Type of resource
metadata:                    #Contains metadata of this resource.
  name: elasticsearch        #Name of this resource
  labels:                    #Additional identifier to put on pods
    component: elasticsearch #puts component = elasticsearch
spec:                        #Specifications of this resource
  type: NodePort             #type of service
  selector:                  #will distribute load on pods which
    component: elasticsearch #have label `component = elasticsearch`
  ports:                     #Port on which LoadBalancer will listen
  - name: http               #Name given to port
    port: 9200               #Port number
    protocol: TCP            #Protocol supported
  - name: transport          #Name given to port
    port: 9300               #Port number
    protocol: TCP            #Protocol supported
---

apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: fluentd-es
  labels:
    k8s-addon: logging-elasticsearch.addons.k8s.io
    k8s-app: fluentd-es
    kubernetes.io/cluster-service: "true"
    version: v2.0.4
spec:
  template:
    metadata:
      labels:
        k8s-app: fluentd-es
        kubernetes.io/cluster-service: "true"
        version: v2.0.4
    spec:
      serviceAccountName: fluentd-es
      containers:
      - name: fluentd-es
        image: k8s.gcr.io/fluentd-elasticsearch:1.22
        command:
          - '/bin/sh'
          - '-c'
          - '/usr/sbin/td-agent 2>&1 >> /var/log/fluentd.log'
        resources:
          limits:
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
      #nodeSelector:
      #  alpha.kubernetes.io/fluentd-ds-ready: "true"
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kibana-logging
  labels:
    k8s-addon: logging-elasticsearch.addons.k8s.io
    k8s-app: kibana-logging
    kubernetes.io/cluster-service: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: kibana-logging
  template:
    metadata:
      labels:
        k8s-app: kibana-logging
    spec:
      containers:
      - name: kibana-logging
        image: docker.elastic.co/kibana/kibana:5.6.4
        resources:
          # keep request = limit to keep this container in guaranteed class
          limits:
            cpu: 100m
          requests:
            cpu: 100m
        env:
          - name: "ELASTICSEARCH_URL"
            value: "http://elasticsearch:9200"
          - name: "SERVER_BASEPATH"
            value: "/api/v1/proxy/namespaces/default/services/kibana-logging"
          - name: "XPACK_MONITORING_ENABLED"
            value: "false"
          - name: "XPACK_SECURITY_ENABLED"
            value: "false"
        ports:
        - containerPort: 5601
          name: ui
          protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  name: kibana-logging
  labels:
    k8s-addon: logging-elasticsearch.addons.k8s.io
    k8s-app: kibana-logging
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: "Kibana"
spec:
  ports:
  - port: 5601
    protocol: TCP
    targetPort: ui
  selector:
    k8s-app: kibana-logging
