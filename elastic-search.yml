# RBAC authn and authz
apiVersion: v1
kind: ServiceAccount
metadata:
  name: elasticsearch-logging
  namespace: kube-system
  labels:
    k8s-app: elasticsearch-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: elasticsearch-logging
  labels:
    k8s-app: elasticsearch-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
rules:
- apiGroups:
  - ""
  resources:
  - "services"
  - "namespaces"
  - "endpoints"
  verbs:
  - "get"
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  namespace: kube-system
  name: elasticsearch-logging
  labels:
    k8s-app: elasticsearch-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
subjects:
- kind: ServiceAccount
  name: elasticsearch-logging
  namespace: kube-system
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: elasticsearch-logging
  apiGroup: ""
---
# Elasticsearch deployment itself
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: elasticsearch-logging
  namespace: kube-system
  labels:
    k8s-app: elasticsearch-logging
    version: v5.6.2
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  serviceName: elasticsearch-logging
  replicas: 2
  selector:
    matchLabels:
      k8s-app: elasticsearch-logging
      version: v5.6.2
  template:
    metadata:
      labels:
        k8s-app: elasticsearch-logging
        version: v5.6.2
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccountName: elasticsearch-logging
      containers:
      - image: gcr.io/google-containers/elasticsearch:v5.6.2
        name: elasticsearch-logging
        resources:
          # need more cpu upon initialization, therefore burstable class
          limits:
            cpu: 1000m
          requests:
            cpu: 100m
        ports:
        - containerPort: 9200
          name: db
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:
        - name: elasticsearch-logging
          mountPath: /data
        env:
        - name: ES_JAVA_OPTS
          value: -Xms256m -Xmx256m
        - name: "NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      initContainers:
      - image: alpine:3.6
        command: ["/sbin/sysctl", "-w", "vm.max_map_count=262144"]
        name: elasticsearch-logging-init
        securityContext:
          privileged: true
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-logging
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-logging
  namespace: kube-system
  labels:
    k8s-app: elasticsearch-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/name: "Elasticsearch"
spec:
  ports:
  - port: 9200
    protocol: TCP
    targetPort: db
  selector:
    k8s-app: elasticsearch-logging
---
apiVersion: v1
kind: Secret
metadata:
  name: curator-config
  namespace: kube-system
type: Opaque
data:
  action_file.yml: YWN0aW9uczoKICAxOgogICAgYWN0aW9uOiBkZWxldGVfaW5kaWNlcwogICAgZGVzY3JpcHRpb246ICJDbGVhbiB1cCBFUyBieSBkZWxldGluZyBvbGQgaW5kaWNlcyIKICAgIG9wdGlvbnM6CiAgICAgIGlnbm9yZV9lbXB0eV9saXN0OiBUcnVlCiAgICAgIHRpbWVvdXRfb3ZlcnJpZGU6CiAgICAgIGNvbnRpbnVlX2lmX2V4Y2VwdGlvbjogRmFsc2UKICAgICAgZGlzYWJsZV9hY3Rpb246IEZhbHNlCiAgICBmaWx0ZXJzOgogICAgLSBmaWx0ZXJ0eXBlOiBhZ2UKICAgICAgc291cmNlOiBuYW1lCiAgICAgIGRpcmVjdGlvbjogb2xkZXIKICAgICAgdGltZXN0cmluZzogJyVZLiVtLiVkJwogICAgICB1bml0OiBkYXlzCiAgICAgIHVuaXRfY291bnQ6IDMKICAgICAgZmllbGQ6CiAgICAgIHN0YXRzX3Jlc3VsdDoKICAgICAgZXBvY2g6CiAgICAgIGV4Y2x1ZGU6IEZhbHNlCg==
  config.yml: Y2xpZW50OgogIGhvc3RzOgogICAgLSBlbGFzdGljc2VhcmNoLWxvZ2dpbmcKICBwb3J0OiA5MjAwCiAgdXJsX3ByZWZpeDoKICB1c2Vfc3NsOiBGYWxzZQogIGNlcnRpZmljYXRlOgogIGNsaWVudF9jZXJ0OgogIGNsaWVudF9rZXk6CiAgc3NsX25vX3ZhbGlkYXRlOiBGYWxzZQogIGh0dHBfYXV0aDogZWxhc3RpYzpjaGFuZ2VtZQogIHRpbWVvdXQ6IDMwCiAgbWFzdGVyX29ubHk6IEZhbHNlCmxvZ2dpbmc6CiAgbG9nbGV2ZWw6IElORk8KICBsb2dmaWxlOgogIGxvZ2Zvcm1hdDogZGVmYXVsdAogIGJsYWNrbGlzdDogWydlbGFzdGljc2VhcmNoJywgJ3VybGxpYjMnXQo=
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: es-curator
  namespace: kube-system
  labels:
    k8s-app: es-curator
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: es-curator

  template:
    metadata:
      labels:
        k8s-app: es-curator
    spec:
      containers:
      - name: es-curator
        image: aknudsen/es-curator-service:5.3.0-1
        imagePullPolicy: IfNotPresent
        args: ["--config", "/etc/config/config.yml", "/etc/config/action_file.yml"]
        volumeMounts:
          - name: config-volume
            mountPath: /etc/config
      volumes:
        - name: config-volume
          secret:
            secretName: curator-config
